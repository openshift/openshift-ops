---
# input variables
# - with_status_check
# - excluder_package_state
# - docker_excluder_package_state
- include: init.yml

# Install any excluder that is enabled
- include: install.yml
  vars:
    # Both docker_excluder_on and openshift_excluder_on are set in openshift_excluder->init task
    install_docker_excluder: "{{ docker_excluder_on | bool }}"
    install_openshift_excluder: "{{ openshift_excluder_on | bool }}"
  when: docker_excluder_on or openshift_excluder_on

  # if the docker excluder is not enabled, we don't care about its status
  # it the docker excluder is enabled, we install it and in case its status is non-zero
  # it is enabled no matter what

# And finally adjust an excluder in order to update host components correctly. First
# exclude then unexclude
- block:
  - include: exclude.yml
    vars:
      # Enable the docker excluder only if it is overrided
      # BZ #1430612: docker excluders should be enabled even during installation and upgrade
      exclude_docker_excluder: "{{ docker_excluder_on | bool }}"
      # excluder is to be disabled by default
      exclude_openshift_excluder: false
  # All excluders that are to be disabled are disabled
  - include: unexclude.yml
    vars:
      # If the docker override  is not set, default to the generic behaviour
      # BZ #1430612: docker excluders should be enabled even during installation and upgrade
      unexclude_docker_excluder: false
      # disable openshift excluder is never overrided to be enabled
      # disable it if the docker excluder is enabled
      unexclude_openshift_excluder: true
  when:
  - not openshift.common.is_atomic | bool

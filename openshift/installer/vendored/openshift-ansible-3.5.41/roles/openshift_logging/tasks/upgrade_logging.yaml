---
- name: Stop the Cluster
  include: stop_cluster.yaml

- name: Upgrade logging
  include: install_logging.yaml
  vars:
    start_cluster: False

# start ES so that we can run migrate script
- name: Retrieve elasticsearch
  oc_obj:
    state: list
    kind: dc
    selector: "component=es"
    namespace: "{{openshift_logging_namespace}}"
  register: es_dc

- name: start elasticsearch
  oc_scale:
    kind: dc
    name: "{{ object }}"
    namespace: "{{openshift_logging_namespace}}"
    replicas: 1
  with_items: "{{ es_dc.results.results[0]['items'] | map(attribute='metadata.name') | list }}"
  loop_control:
    loop_var: object

- name: Wait for pods to start
  oc_obj:
    state: list
    kind: pods
    selector: "component=es"
    namespace: "{{openshift_logging_namespace}}"
  register: running_pod
  until: running_pod.results.results[0]['items'] | selectattr('status.phase', 'match', '^Running$') | map(attribute='metadata.name') | list | length != 0
  retries: 30
  delay: 10

- name: Run upgrade script
  script: es_migration.sh {{openshift.common.config_base}}/logging/ca.crt {{openshift.common.config_base}}/logging/system.admin.key {{openshift.common.config_base}}/logging/system.admin.crt {{openshift_logging_es_host}} {{openshift_logging_es_port}} {{openshift_logging_namespace}}
  register: script_output
  changed_when:
    - script_output.rc == 0
    - script_output.stdout.find("skipping update_for_uuid") == -1 or script_output.stdout.find("skipping update_for_common_data_model") == -1

- name: Start up rest of cluster
  include: start_cluster.yaml

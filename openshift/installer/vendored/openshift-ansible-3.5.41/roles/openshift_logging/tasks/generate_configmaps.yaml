---
- block:
    - copy:
        src: elasticsearch-logging.yml
        dest: "{{mktemp.stdout}}/elasticsearch-logging.yml"
      when: es_logging_contents is undefined
      changed_when: no

    - template:
        src: elasticsearch.yml.j2
        dest: "{{mktemp.stdout}}/elasticsearch.yml"
      vars:
        - allow_cluster_reader: "{{openshift_logging_es_ops_allow_cluster_reader | lower | default('false')}}"
      when: es_config_contents is undefined
      changed_when: no

    - copy:
        content: "{{es_logging_contents}}"
        dest: "{{mktemp.stdout}}/elasticsearch-logging.yml"
      when: es_logging_contents is defined
      changed_when: no

    - copy:
        content: "{{es_config_contents}}"
        dest: "{{mktemp.stdout}}/elasticsearch.yml"
      when: es_config_contents is defined
      changed_when: no

    - command: >
        {{ openshift.common.client_binary }} --config={{ mktemp.stdout }}/admin.kubeconfig create configmap logging-elasticsearch
        --from-file=logging.yml={{mktemp.stdout}}/elasticsearch-logging.yml --from-file=elasticsearch.yml={{mktemp.stdout}}/elasticsearch.yml -o yaml --dry-run
      register: es_configmap
      changed_when: no

    - copy:
        content: "{{es_configmap.stdout}}"
        dest: "{{mktemp.stdout}}/templates/logging-elasticsearch-configmap.yaml"
      when: es_configmap.stdout is defined
      changed_when: no
  check_mode: no

- block:
    - copy:
        src: curator.yml
        dest: "{{mktemp.stdout}}/curator.yml"
      when: curator_config_contents is undefined
      changed_when: no

    - copy:
        content: "{{curator_config_contents}}"
        dest: "{{mktemp.stdout}}/curator.yml"
      when: curator_config_contents is defined
      changed_when: no

    - command: >
        {{ openshift.common.client_binary }} --config={{ mktemp.stdout }}/admin.kubeconfig create configmap logging-curator
        --from-file=config.yaml={{mktemp.stdout}}/curator.yml -o yaml --dry-run
      register: curator_configmap
      changed_when: no

    - copy:
        content: "{{curator_configmap.stdout}}"
        dest: "{{mktemp.stdout}}/templates/logging-curator-configmap.yaml"
      when: curator_configmap.stdout is defined
      changed_when: no
  check_mode: no

- block:
    - copy:
        src: fluent.conf
        dest: "{{mktemp.stdout}}/fluent.conf"
      when: fluentd_config_contents is undefined
      changed_when: no

    - copy:
        src: fluentd-throttle-config.yaml
        dest: "{{mktemp.stdout}}/fluentd-throttle-config.yaml"
      when: fluentd_throttle_contents is undefined
      changed_when: no

    - copy:
        src: secure-forward.conf
        dest: "{{mktemp.stdout}}/secure-forward.conf"
      when: fluentd_securefoward_contents is undefined
      changed_when: no

    - copy:
        content: "{{fluentd_config_contents}}"
        dest: "{{mktemp.stdout}}/fluent.conf"
      when: fluentd_config_contents is defined
      changed_when: no

    - copy:
        content: "{{fluentd_throttle_contents}}"
        dest: "{{mktemp.stdout}}/fluentd-throttle-config.yaml"
      when: fluentd_throttle_contents is defined
      changed_when: no

    - copy:
        content: "{{fluentd_secureforward_contents}}"
        dest: "{{mktemp.stdout}}/secure-forward.conf"
      when: fluentd_secureforward_contents is defined
      changed_when: no

    - command: >
        {{ openshift.common.client_binary }} --config={{ mktemp.stdout }}/admin.kubeconfig create configmap logging-fluentd
        --from-file=fluent.conf={{mktemp.stdout}}/fluent.conf --from-file=throttle-config.yaml={{mktemp.stdout}}/fluentd-throttle-config.yaml
        --from-file=secure-forward.conf={{mktemp.stdout}}/secure-forward.conf -o yaml --dry-run
      register: fluentd_configmap
      changed_when: no

    - copy:
        content: "{{fluentd_configmap.stdout}}"
        dest: "{{mktemp.stdout}}/templates/logging-fluentd-configmap.yaml"
      when: fluentd_configmap.stdout is defined
      changed_when: no
  check_mode: no

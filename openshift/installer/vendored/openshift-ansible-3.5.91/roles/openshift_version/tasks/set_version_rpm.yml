---
- name: Set rpm version to configure if openshift_pkg_version specified
  set_fact:
    # Expects a leading "-" in inventory, strip it off here, and remove trailing release,
    openshift_version: "{{ openshift_pkg_version[1:].split('-')[0] }}"
  when: openshift_pkg_version is defined and openshift_version is not defined

# if {{ openshift.common.service_type}}-excluder is enabled,
# the repoquery for {{ openshift.common.service_type}} will not work.
# Thus, create a temporary yum,conf file where exclude= is set to an empty list
- name: Create temporary yum.conf file
  command: mktemp -d /tmp/yum.conf.XXXXXX
  register: yum_conf_temp_file_result

- set_fact:
    yum_conf_temp_file: "{{yum_conf_temp_file_result.stdout}}/yum.conf"

- name: Copy yum.conf into the temporary file
  copy:
    src: /etc/yum.conf
    dest: "{{ yum_conf_temp_file }}"
    remote_src: True

- name: Clear the exclude= list in the temporary yum.conf
  lineinfile:
    # since ansible 2.3 s/dest/path
    dest: "{{ yum_conf_temp_file }}"
    regexp: '^exclude='
    line: 'exclude='

- name: Gather common package version
  command: >
    {{ repoquery_cmd }} --config "{{ yum_conf_temp_file }}" --qf '%{version}' "{{ openshift.common.service_type}}"
  register: common_version
  failed_when: false
  changed_when: false
  when: openshift_version is not defined

- name: Delete the temporary yum.conf
  file:
    path: "{{ yum_conf_temp_file_result.stdout }}"
    state: absent

- set_fact:
    openshift_version: "{{ common_version.stdout | default('0.0', True) }}"
  when: openshift_version is not defined

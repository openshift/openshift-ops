# settings/vars for host monitoring container startup/configuration
#

---
oso_cluster_id: "{{ osohm_cluster_id }}"
oso_host_type: "{{ osohm_host_type }}"

{% if osohm_host_type == 'master' %}
oso_snapshot_aws_key_id: "{{ osohm_snapshot_aws_access_key_id }}"
oso_snapshot_aws_secret_access_key: "{{ osohm_snapshot_aws_secret_access_key }}"
{% endif %}

zagg_client_config:
  host:
    name: "{{ osohm_host_name }}"
  zagg:
    url: "{{ osohm_zagg_web_url }}"
    user: "{{ osohm_default_zagg_server_user }}"
    pass: "{{ osohm_default_zagg_server_password }}"
    ssl_verify: "{{ osohm_zagg_verify_ssl }}"
    verbose: False
    debug: False
  pcp:
    metrics:
    - hinv.ncpu
    - kernel.all.load
    - kernel.all.pswitch
    - kernel.all.uptime
    - kernel.uname.distro
    - kernel.uname.machine
    - kernel.uname.nodename
    - kernel.uname.nodename
    - kernel.uname.release
    - kernel.uname.sysname
    - kernel.uname.version
    - mem.freemem
    - mem.physmem
    - mem.util.available
    - mem.util.bufmem
    - mem.util.cached
    - mem.util.used
    - proc.nprocs
    - swap.free
    - swap.length
    - swap.used

  heartbeat:
    templates:
    - Template Heartbeat        # So we can send hearbeats
    - Template OS Linux         # So we can send host related metrics
    - Template Docker           # So we can send docker related metrics
{% if osohm_host_type == 'master' or osohm_host_type == 'node' %}
    - Template Openshift Node   # So we can send node related metrics
{% endif %}
    - Template Operations Tools # So ops-runner works
    - Template Performance Copilot # So we can report PCP metrics
{% if osohm_host_type == 'master' %}
    - Template Openshift Master # So we can send master related metrics
    - Template AWS
{% endif %}
{% if osohm_host_type == 'ansible-tower' %}
    - Template Config Loop      # So we can send config loop related metrics
{% endif %}

    hostgroups:
    - "{{ osohm_cluster_id }}"
    - "{{ osohm_environment }}"

# Generic Linux Checks
host_monitoring_cron:
- name: send pcp ping every 5 mintues
  minute: "*/5"
  job: ops-runner -f -s 15 -n cspp.pcp.ping /usr/bin/cron-send-pcp-ping

- name: run pcp checks every minute
  minute: "*"
  job: ops-runner -f -s 15 -n ozpc.send.pcp /usr/bin/ops-zagg-pcp-client

- name: run pcp sampler every minute
  minute: "*"
  job: ops-runner -f -s 15 -n cspsm.kernal.all.cpu /usr/bin/cron-send-pcp-sampled-metrics -m kernel.all.cpu.idle -m kernel.all.cpu.nice -m kernel.all.cpu.steal -m kernel.all.cpu.sys -m kernel.all.cpu.user -m kernel.all.cpu.wait.total -m kernel.all.cpu.irq.hard -m kernel.all.cpu.irq.soft

- name: Do a full heartbeat
  minute: "10"
  hour: "*"
  job: ops-runner -f -s 15 -s 3600 -n ozc.send.heartbeat.full /usr/bin/ops-zagg-client --send-heartbeat

- name: Do a quick heartbeat
  minute: "*/5"
  job: ops-runner -f -s 15 -n ozc.send.heartbeat.quick /usr/bin/ops-zagg-client -k heartbeat.ping -o 1

- name: run filesystem space checks every 10 minutes
  minute: "*/10"
  job: ops-runner -f -s 15 -n csfm.filesys.full /usr/bin/cron-send-filesystem-metrics

- name: run disk TPS checks every minute
  minute: "*"
  job: ops-runner -f -s 15 -n csdim.disk.tps /usr/bin/cron-send-disk-metrics

- name: run network checks every minute
  minute: "*"
  job: ops-runner -f -s 15 -n csnm.network.int /usr/bin/cron-send-network-metrics

# We might want to break docker checks out at some point.
- name: run docker storage space checks every 10 minutes
  minute: "*/10"
  job: ops-runner -f -s 15 -n csdm.docker.storage /usr/bin/cron-send-docker-metrics

- name: run docker info timer
  minute: "*/10"
  job: ops-runner -f -s 15 -n csdt.docker.timer /usr/bin/cron-send-docker-timer

{% if osohm_host_type != 'ansible-tower' %}
- name: run docker dns test
  minute: "*/5"
  job: ops-runner -f -s 15 -n csddr.docker.dns.resolution /usr/bin/cron-send-docker-dns-resolution
{% endif %}

- name: run docker dns test on existing containers
  minute: "*/5"
  job: ops-runner -f -s 15 -n csdedr.docker.existing.dns.resolution /usr/bin/cron-send-docker-existing-dns-resolution

{% if osohm_host_type == 'master' or osohm_host_type == 'node' %}
{# Openshift node checks #}
- name: send openshift-node process count
  minute: "*/2"
  job: ops-runner -f -s 15 -n cspc.openshift.node.process.count /usr/bin/cron-send-process-count '^/usr/bin/openshift start node' openshift.node.process.count

- name: send ovs status data
  minute: "*/5"
  job: ops-runner -f -s 15 -n csos.openshift.master.ovs.status /usr/bin/cron-send-ovs-status

- name: fix and report on stray OVS rules
  minute: "*/5"
  job: ops-runner -f -s 15 -n cfor.openshift.node.ovs.stray.rules /usr/bin/cron-fix-ovs-rules

- name: send cluster docker registry checks
  minute: "*/2"
  job: ops-runner -f -s 15 -n csrc.openshift.node.registry.checks /usr/bin/cron-send-registry-checks

- name: send openshift-node process Mem usage and Cpu usage
  minute: "*/2"
  job: ops-runner -f -s 15 -n cscmp.openshift.node.process.usage /usr/bin/cron-send-cpu-mem-process
{# end if host master or node #}
{% endif %}

{% if osohm_host_type == 'master' %}
{# Openshift Master checks #}
- name: run create app every 5 minutes
  minute: "*/5"
  job: "export ZAGG_CLIENT_HOSTNAME={{ osohm_host_name }}; ops-runner -f -s 15 -n csca.openshift.master.app.create /usr/bin/cron-send-create-app &>> /var/log/create_app.log"

- name: run create app with build process every 30 minutes
  minute: "*/30"
  job: "export ZAGG_CLIENT_HOSTNAME={{ osohm_host_name }}; ops-runner -f -s 15 -n csca.openshift.master.app.build.create /usr/bin/cron-send-create-app --name nodejs-example &>> /var/log/build_app.log"

{% if osohm_master_ha|bool %}
- name: send openshift-master process count
  minute: "*/2"
  job: ops-runner -f -s 15 -n cspc.openshift.master.process.count /usr/bin/cron-send-process-count '^/usr/bin/openshift start master controllers' openshift.master.process.count
{% endif %}

{% if not osohm_master_ha|bool %}
- name: send openshift-master process count
  minute: "*/2"
  job: ops-runner -f -s 15 -n cspc.openshift.master.process.count /usr/bin/cron-send-process-count '^/usr/bin/openshift start master' openshift.master.process.count
{% endif %}

- name: send openshift-master counts (user, pod, project) every 2 hours
  hour: "*/2"
  minute: "0"
  job: ops-runner -f -s 15 -n csosmm.openshift.master.counts /usr/bin/cron-send-os-master-metrics --project-count --pod-count --user-count --pv-info

- name: send openshift-master /healthz status every 4 minutes
  minute: "*/4"
  job: ops-runner -f -s 15 -n csosmm.openshift.master.api.healthz /usr/bin/cron-send-os-master-metrics --healthz --api-ping --metrics --nodes-not-ready

- name: send openshift-master local (test https://127.0.0.1) status every 5 minutes
  minute: "*/5"
  job: ops-runner -f -s 15 -n csosmm.openshift.master.api.healthz /usr/bin/cron-send-os-master-metrics --local

- name: send openshift-master SkyDNS status every 4 minutes
  minute: "*/4"
  job: ops-runner -f -s 50 -n csosms.openshift.master.skydns /usr/bin/cron-send-os-skydns-checks

- name: send openshift-master etcd status
  minute: "*/2"
  job: ops-runner -f -s 15 -n cspc.openshift.master.etcd.status /usr/bin/cron-send-etcd-status

- name: send S3 bucket metrics weekly
  hour: "3"
  minute: "0"
  job: ops-runner -f -s 90 -n cssm.aws /usr/bin/cron-send-s3-metrics

- name: send kubeconfig parser check
  minute: "*/5"
  job: ops-runner -f -s 30 -n cskc.openshift.master.kubeconfig.status /usr/bin/cron-send-check-kubeconfig

- name: send etcd connections count on port 2379
  minute: "*/5"
  job: ops-runner -f -s 30 -n /usr/bin/cron-send-connection-count.py etcd 2379 openshift.master.etcd.port_2379.connections.established

- name: send etcd connections count on port 2380
  minute: "*/5"
  job: ops-runner -f -s 30 -n /usr/bin/cron-send-connection-count.py etcd 2380 openshift.master.etcd.port_2380.connections.established

- name: send master api server connections count on port 443
  minute: "*/5"
  job: ops-runner -f -s 30 -n /usr/bin/cron-send-connection-count.py openshift 443 openshift.master.api.port_443.connections.established

{% if osohm_enable_cluster_capacity_reporting|bool and osohm_master_primary | default(False) | bool %}
- name: "Cluster capacity reporting"
  hour: "*"
  minute: "15"
  job: ops-runner -f -s 30 -n cscc.openshift.master.capacity /usr/bin/cron-send-cluster-capacity
{% endif %}

{% if osohm_master_primary | default(False) | bool %}
- name: "Prune builds/deployments/images"
  hour: "{{ osohm_pruning.cron.hour }}"
  minute: "{{ osohm_pruning.cron.minute }}"
  job: "ops-runner -f -s 30 -n cosp.openshift.master.prune /usr/bin/cron-openshift-pruner --image-keep-younger-than {{ osohm_pruning.image_hours_to_keep }} --image-keep-tag-revisions {{ osohm_pruning.image_revisions_to_keep }}"
{% endif %}

{% if osohm_master_primary | default(False) | bool %}
- name: "Snapshot volumes tagged with hourly"
  hour: "*"
  minute: "0"
  job: ops-runner -f -s 90 -n oesev.snapshot.hourly ops-ec2-snapshot-ebs-volumes --aws-creds-profile snapshotter --with-schedule hourly
{% endif %}

{% if osohm_master_primary | default(False) | bool %}
- name: "Snapshot EBS volumes tagged with daily"
  hour: "0"
  minute: "0"
  job: ops-runner -f -s 90 -n oesev.snapshot.daily ops-ec2-snapshot-ebs-volumes --aws-creds-profile snapshotter --with-schedule daily
{% endif %}

{% if osohm_master_primary | default(False) | bool %}
- name: "Snapshot EBS volumes tagged with weekly"
  weekday: "0"
  hour: "0"
  minute: "0"
  job: ops-runner -f -s 90 -n oesev.snapshot.weekly ops-ec2-snapshot-ebs-volumes --aws-creds-profile snapshotter --with-schedule weekly
{% endif %}

{% if osohm_master_primary | default(False) | bool %}
- name: "Snapshot EBS volumes tagged with monthly"
  day: "1"
  hour: "0"
  minute: "0"
  job: ops-runner -f -s 90 -n oesev.snapshot.monthly ops-ec2-snapshot-ebs-volumes --aws-creds-profile snapshotter --with-schedule monthly
{% endif %}

{% if osohm_master_primary | default(False) | bool %}
# DO NOT CHANGE without first talking to twiest.
- name: "Trim EBS Snapshot"
  minute: "10"
  job: ops-runner -f -s 90 -n oetes.trim.snapshots ops-ec2-trim-ebs-snapshots --aws-creds-profile snapshotter --keep-hourly 24 --keep-daily 7 --keep-weekly 4 --keep-monthly 1
{% endif %}

{# end if host master #}
{% endif %}

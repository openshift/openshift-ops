---
apiVersion: v1
kind: Template
metadata:
  name: oso-clamd
objects:

##########################################################################
# ServiceAccount objects and their associated named tokens
##########################################################################

# This SA can push image layers in the project
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: clamd-image-pusher
# This is a named token (rather than a token with autogenerated name) so
# that it can be referenced below and mounted.
- apiVersion: v1
  kind: Secret
  metadata:
    name: clamd-image-pusher-token
    annotations:
      kubernetes.io/service-account.name: clamd-image-pusher
  type: kubernetes.io/service-account-token

# This SA can watch an imagestream or imagestreamtag in the project and
# pull image layers in the project
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: clamd-image-watcher
# This is a named token (rather than a token with autogenerated name) so
# that it can be referenced below and mounted.
- apiVersion: v1
  kind: Secret
  metadata:
    name: clamd-image-watcher-token
    annotations:
      kubernetes.io/service-account.name: clamd-image-watcher
  type: kubernetes.io/service-account-token

# This SA is a deployer SA that can deploy pods in the project that
# need to mount a hostpath
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: clamd-deployer

# The clamd-updater pod needs to be able to watch imagestreams to detect
# when a new version of the signature databases is available.
- apiVersion: v1
  kind: Role
  metadata:
    name: imagestream-watcher
  rules:
  - apiGroups:
    - ""
    attributeRestrictions: null
    resources:
    - imagestreamimages
    - imagestreams
    - imagestreamtags
    verbs:
    - get
    - watch

##########################################################################
# BuildConfigs
##########################################################################

- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      template: oso-clamd
    name: "oso-${PLAT}-ops-base"
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: "oso-${PLAT}-ops-base:latest"
    postCommit: {}
    resources: {}
    source:
      contextDir: "docker/oso-ops-base/${PLAT}"
      git:
        ref: prod
        uri: https://github.com/openshift/openshift-tools
      secrets: []
      type: Git
    strategy:
      dockerStrategy:
        env:
        - name: OO_PAUSE_ON_BUILD
          value: "false"
        from:
          kind: ImageStreamTag
          name: "${PLAT}:latest"
      type: Docker
    triggers:
    - imageChange: {}
      type: ImageChange

- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      template: oso-clamd
    name: "oso-clambase"
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: "oso-clambase:latest"
    postCommit: {}
    resources: {}
    source:
      contextDir: "docker/oso-clambase/"
      git:
        ref: scan
        uri: https://github.com/joelsmith/openshift-tools
      secrets: []
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: "oso-${PLAT}-ops-base:latest"
      type: Docker
    triggers:
    - imageChange: {}
      type: ImageChange

- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      template: oso-clamd
    name: oso-freshclam
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: "oso-${PLAT}-freshclam:latest"
    postCommit: {}
    resources: {}
    source:
      contextDir: "docker/oso-freshclam/${PLAT}"
      git:
        ref: scan
        uri: https://github.com/joelsmith/openshift-tools
      secrets: []
      type: Git
    strategy:
      dockerStrategy:
        env:
        - name: OO_PAUSE_ON_BUILD
          value: "false"
        from:
          kind: ImageStreamTag
          name: "oso-clambase:latest"
      type: Docker
    triggers:
    - imageChange: {}
      type: ImageChange

- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      template: oso-clamd
    name: oso-clamd
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: "oso-${PLAT}-clamd:latest"
    postCommit: {}
    resources: {}
    source:
      contextDir: "docker/oso-clamd/${PLAT}"
      git:
        ref: scan
        uri: https://github.com/joelsmith/openshift-tools
      secrets: []
      type: Git
    strategy:
      dockerStrategy:
        env:
        - name: OO_PAUSE_ON_BUILD
          value: "false"
        from:
          kind: ImageStreamTag
          name: "oso-clambase:latest"
      type: Docker
    triggers:
    - imageChange: {}
      type: ImageChange

- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      template: oso-clamd
    name: oso-clamd-update
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: "oso-${PLAT}-clamd-update:latest"
    postCommit: {}
    resources: {}
    source:
      contextDir: "docker/oso-clamd-update/${PLAT}"
      git:
        ref: scan
        uri: https://github.com/joelsmith/openshift-tools
      secrets: []
      type: Git
    strategy:
      dockerStrategy:
        env:
        - name: OO_PAUSE_ON_BUILD
          value: "false"
        from:
          kind: ImageStreamTag
          name: "oso-clambase:latest"
      type: Docker
    triggers:
    - imageChange: {}
      type: ImageChange

##########################################################################
# ImageStreams
##########################################################################

- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: oso-clamd
    name: "${PLAT}"
  spec:
    dockerImageRepository: "library/${PLAT}"
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: "registry.access.redhat.com/${PLAT}:latest"
      importPolicy: {}
      name: latest

- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: oso-clamd
    name: "oso-clambase"
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: "${NAMESPACE}/oso-clambase:latest"
      importPolicy: {}
      name: latest

- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: oso-clamd
    name: "oso-${PLAT}-ops-base"
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: "${NAMESPACE}/oso-${PLAT}-ops-base:latest"
      importPolicy: {}
      name: latest

- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: oso-clamd
    name: "oso-${PLAT}-freshclam"
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: "${NAMESPACE}/oso-${PLAT}-freshclam:latest"
      importPolicy: {}
      name: latest

- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: oso-clamd
    name: "oso-${PLAT}-clamd"
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: "${NAMESPACE}/oso-${PLAT}-clamd:latest"
      importPolicy: {}
      name: latest

- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: oso-clamd
    name: "oso-${PLAT}-clamd-update"
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: "${NAMESPACE}/oso-${PLAT}-clamd-update:latest"
      importPolicy: {}
      name: latest

##########################################################################
# DeploymentConfigs
##########################################################################

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      template: oso-clamd
    name: oso-freshclam
  spec:
    replicas: 1
    selector:
      deploymentconfig: oso-freshclam
    strategy:
      resources: {}
      type: Rolling
    template:
      metadata:
        labels:
          deploymentconfig: oso-freshclam
      spec:
        containers:
        - env:
          - name: OO_PAUSE_ON_START
            value: "false"
          image: "oso-${PLAT}-freshclam:latest"
          imagePullPolicy: Always
          name: oso-freshclam
          resources: {}
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /clamsigs
            name: oso-clamsigs
          - mountPath: /pusher-token
            name: pusher-token
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: oso-clamsigs
          secret:
            secretName: oso-clamsigs
        - name: pusher-token
          secret:
            secretName: clamd-image-pusher-token
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - oso-freshclam
        from:
          kind: ImageStreamTag
          name: "oso-${PLAT}-freshclam:latest"
      type: ImageChange

##########################################################################
# DaemonSets
##########################################################################

- apiVersion: extensions/v1beta1
  kind: DaemonSet
  metadata:
    labels:
      template: oso-clamd
    name: oso-clamd
  spec:
    selector:
      matchLabels:
        name: oso-clamd
    strategy:
      type: Recreate
      recreateParams:
        pre: {}
        mid: {}
        post: {}
    template:
      metadata:
        labels:
          name: oso-clamd
      spec:
        nodeSelector:
          type: compute
        containers:
        - env:
          - name: OO_PAUSE_ON_START
            value: "false"
          image: "${REGISTRY_ADDR}/${NAMESPACE}/oso-${PLAT}-clamd:latest"
          imagePullPolicy: Always
          name: oso-clamd
          resources: {}
          securityContext:
            # no capabilities needed, so drop them all. Because clamd-deployer can launch priviledged pods, we have more caps available than most pods (more to drop)
            capabilities:
              drop: [ "CHOWN", "DAC_OVERRIDE", "FOWNER", "FSETID", "KILL", "SETGID", "SETUID", "SETPCAP", "NET_BIND_SERVICE", "NET_RAW", "SYS_CHROOT", "MKNOD", "AUDIT_WRITE", "SETFCAP" ]
            privileged: true
            runAsUser: 10000
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/clamav
            name: clamsigs
            readOnly: true
          - mountPath: /var/run/clamd.scan
            name: clamsock
        - env:
          - name: OO_PAUSE_ON_START
            value: "false"
          image: "${REGISTRY_ADDR}/${NAMESPACE}/oso-${PLAT}-clamd-update:latest"
          imagePullPolicy: Always
          name: oso-clamd-update
          resources: {}
          securityContext:
            # no capabilities needed, so drop them all. Because clamd-deployer can launch priviledged pods, we have more caps available than most pods (more to drop)
            capabilities:
              drop: [ "CHOWN", "DAC_OVERRIDE", "FOWNER", "FSETID", "KILL", "SETGID", "SETUID", "SETPCAP", "NET_BIND_SERVICE", "NET_RAW", "SYS_CHROOT", "MKNOD", "AUDIT_WRITE", "SETFCAP" ]
            privileged: false
            runAsUser: 10001
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/clamav
            name: clamsigs
          - mountPath: /var/run/clamd.scan
            name: clamsock
          - mountPath: /usr/bin/oc
            name: usr-bin-oc
          - mountPath: /token
            name: token
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        # We need to have MCS label s0 so we can read files of all containers when their descriptors are passed to us
        securityContext:
          seLinuxOptions:
            level: s0
        serviceAccount: clamd-deployer
#FIXME: uncomment the next line when we get to OpenShift 3.6. We do NOT want the clamd-deployer SA token visible within the pod
#       automountServiceAccountToken: false
        terminationGracePeriodSeconds: 10
        volumes:
        - name: clamsock
          hostPath:
            path: /var/run/clamd.scan
        - name: usr-bin-oc
          hostPath:
            path: /usr/bin/oc
        - name: clamsigs
          emptyDir: {}
        - name: token
          secret:
            secretName: clamd-image-watcher-token
    test: false

##########################################################################
# Template parameters
##########################################################################

parameters:
- description: Platform name
  name: PLAT
  value: rhel7
- description: Namespace name
  name: NAMESPACE
  value: management-infra
- description: Cluster registry address
  name: REGISTRY_ADDR
  value: docker-registry.default.svc.cluster.local:5000
